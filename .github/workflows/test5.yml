name: Cortex CLI Code Scan

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CORTEX_API_KEY: ${{ secrets.CORTEX_API_KEY }}
  CORTEX_API_KEY_ID: ${{ secrets.CORTEX_API_KEY_ID }}
  CORTEX_API_URL: https://api-viso-cythskzmn2uumzxldjkupd.xdr-qa2-uat.us.paloaltonetworks.com
  CORTEX_CLI_VERSION: 0.11.8

jobs:
  cortex-code-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get Temporary Token
        id: get_token
        run: |
          TOKEN_RESPONSE=$(curl --silent --location "${CORTEX_API_URL}/public_api/v1/unified-cli/image/token" \
            --header "Authorization: $CORTEX_API_KEY" \
            --header "x-xdr-auth-id: $CORTEX_API_KEY_ID" \
            --header 'Content-Type: application/json' \
            --data '{}')
          TEMP_TOKEN=$(echo $TOKEN_RESPONSE | jq -r '.token')
          echo "TEMP_TOKEN=$TEMP_TOKEN" >> $GITHUB_ENV

      - name: Pull Docker Image
        run: |
          docker pull distributions-dev.traps.paloaltonetworks.com/cli-docker/${TEMP_TOKEN}/method:amd64-${CORTEX_CLI_VERSION}-dev
          docker tag distributions-dev.traps.paloaltonetworks.com/cli-docker/${TEMP_TOKEN}/method:amd64-${CORTEX_CLI_VERSION}-dev cortexcli:${CORTEX_CLI_VERSION}

      - name: Run Cortex CLI Code Scan
        run: |
          docker run --rm -v "${{ github.workspace }}:/home/code" cortexcli:${CORTEX_CLI_VERSION} \
            --api-base-url "$CORTEX_API_URL" \
            --api-key "$CORTEX_API_KEY" \
            --api-key-id "$CORTEX_API_KEY_ID" \
            code scan \
            --directory /home/code \
            --repo-id "${{ github.repository }}" \
            --branch "${{ github.ref_name }}" \
            --source 'GITHUB_ACTIONS' \
            --create-repo-if-missing \ 
            ---log-level DEBUG
